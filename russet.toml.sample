# Russet configuration file example

# The file to use for persistence.
db_file = "/tmp/russet-db.sqlite"

# The address and port to listen on. The default is to listen only on localhost;
# to serve external requests, set it to "0.0.0.0:9892" or so.
listen = "127.0.0.1:9892"

# A "pepper" for password hashing. A default is compiled in, but you should
# reset it before running Russet for the first time. Note that changing this
# value will invalidate all stored passwords, i.e. it will lock out every
# account! Any string is accepted, and is interpreted as its UTF-8 bytes.
#pepper = "random data"

# Interval between feed checks. This is raw Serde representation of a
# std::time::Duration. Check interval management will likely get overhauled
# soon.
feed_check_interval = { "secs" = 3_600, "nanos" = 0 }

# Settings for rate limiting. The defaults are intended to be conservative;
# you'll want to tune them appropriately to whatever hardware you're running
# Russet on.
[rate_limiting]

# Total number of concurrent connections the application will accept. Additional
# connections over this limit will block until currently-executing requests
# complete.
global_concurrent_limit = 1024

# Total number of concurrent login attempts the application will accept. Login
# requests are very expensive in terms of CPU due to the need to hash passwords,
# so these are limited separately. Under most circumstances, you probably want
# it set to fewer than the number of CPUs available to Russet.
login_concurrent_limit = 4

# TODO: per-client rate limiting
